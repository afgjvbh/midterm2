#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace midterm2.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="midterm2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBuy(Buy instance);
    partial void UpdateBuy(Buy instance);
    partial void DeleteBuy(Buy instance);
    partial void Insertbuy_detail(buy_detail instance);
    partial void Updatebuy_detail(buy_detail instance);
    partial void Deletebuy_detail(buy_detail instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertMovie(Movie instance);
    partial void UpdateMovie(Movie instance);
    partial void DeleteMovie(Movie instance);
    partial void InsertShowtime(Showtime instance);
    partial void UpdateShowtime(Showtime instance);
    partial void DeleteShowtime(Showtime instance);
        #endregion

        public DataClasses1DataContext() :
    base(global::System.Configuration.ConfigurationManager.ConnectionStrings["midterm2ConnectionString1"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Buy> Buys
		{
			get
			{
				return this.GetTable<Buy>();
			}
		}
		
		public System.Data.Linq.Table<buy_detail> buy_details
		{
			get
			{
				return this.GetTable<buy_detail>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Movie> Movies
		{
			get
			{
				return this.GetTable<Movie>();
			}
		}
		
		public System.Data.Linq.Table<Showtime> Showtimes
		{
			get
			{
				return this.GetTable<Showtime>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buy")]
	public partial class Buy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _buy_id;
		
		private System.Nullable<System.DateTime> _buy_date;
		
		private System.Nullable<int> _cus_id;
		
		private EntitySet<buy_detail> _buy_details;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbuy_idChanging(int value);
    partial void Onbuy_idChanged();
    partial void Onbuy_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbuy_dateChanged();
    partial void Oncus_idChanging(System.Nullable<int> value);
    partial void Oncus_idChanged();
    #endregion
		
		public Buy()
		{
			this._buy_details = new EntitySet<buy_detail>(new Action<buy_detail>(this.attach_buy_details), new Action<buy_detail>(this.detach_buy_details));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buy_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int buy_id
		{
			get
			{
				return this._buy_id;
			}
			set
			{
				if ((this._buy_id != value))
				{
					this.Onbuy_idChanging(value);
					this.SendPropertyChanging();
					this._buy_id = value;
					this.SendPropertyChanged("buy_id");
					this.Onbuy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buy_date", DbType="Date")]
		public System.Nullable<System.DateTime> buy_date
		{
			get
			{
				return this._buy_date;
			}
			set
			{
				if ((this._buy_date != value))
				{
					this.Onbuy_dateChanging(value);
					this.SendPropertyChanging();
					this._buy_date = value;
					this.SendPropertyChanged("buy_date");
					this.Onbuy_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_id", DbType="Int")]
		public System.Nullable<int> cus_id
		{
			get
			{
				return this._cus_id;
			}
			set
			{
				if ((this._cus_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncus_idChanging(value);
					this.SendPropertyChanging();
					this._cus_id = value;
					this.SendPropertyChanged("cus_id");
					this.Oncus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buy_buy_detail", Storage="_buy_details", ThisKey="buy_id", OtherKey="buy_id")]
		public EntitySet<buy_detail> buy_details
		{
			get
			{
				return this._buy_details;
			}
			set
			{
				this._buy_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Buy", Storage="_Customer", ThisKey="cus_id", OtherKey="cus_id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Buys.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Buys.Add(this);
						this._cus_id = value.cus_id;
					}
					else
					{
						this._cus_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_buy_details(buy_detail entity)
		{
			this.SendPropertyChanging();
			entity.Buy = this;
		}
		
		private void detach_buy_details(buy_detail entity)
		{
			this.SendPropertyChanging();
			entity.Buy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.buy_detail")]
	public partial class buy_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _buy_id;
		
		private string _show_id;
		
		private System.Nullable<int> _quantity;
		
		private EntityRef<Buy> _Buy;
		
		private EntityRef<Showtime> _Showtime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbuy_idChanging(int value);
    partial void Onbuy_idChanged();
    partial void Onshow_idChanging(string value);
    partial void Onshow_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
		
		public buy_detail()
		{
			this._Buy = default(EntityRef<Buy>);
			this._Showtime = default(EntityRef<Showtime>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buy_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int buy_id
		{
			get
			{
				return this._buy_id;
			}
			set
			{
				if ((this._buy_id != value))
				{
					if (this._Buy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbuy_idChanging(value);
					this.SendPropertyChanging();
					this._buy_id = value;
					this.SendPropertyChanged("buy_id");
					this.Onbuy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_id", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string show_id
		{
			get
			{
				return this._show_id;
			}
			set
			{
				if ((this._show_id != value))
				{
					if (this._Showtime.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onshow_idChanging(value);
					this.SendPropertyChanging();
					this._show_id = value;
					this.SendPropertyChanged("show_id");
					this.Onshow_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buy_buy_detail", Storage="_Buy", ThisKey="buy_id", OtherKey="buy_id", IsForeignKey=true)]
		public Buy Buy
		{
			get
			{
				return this._Buy.Entity;
			}
			set
			{
				Buy previousValue = this._Buy.Entity;
				if (((previousValue != value) 
							|| (this._Buy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buy.Entity = null;
						previousValue.buy_details.Remove(this);
					}
					this._Buy.Entity = value;
					if ((value != null))
					{
						value.buy_details.Add(this);
						this._buy_id = value.buy_id;
					}
					else
					{
						this._buy_id = default(int);
					}
					this.SendPropertyChanged("Buy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Showtime_buy_detail", Storage="_Showtime", ThisKey="show_id", OtherKey="show_id", IsForeignKey=true)]
		public Showtime Showtime
		{
			get
			{
				return this._Showtime.Entity;
			}
			set
			{
				Showtime previousValue = this._Showtime.Entity;
				if (((previousValue != value) 
							|| (this._Showtime.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Showtime.Entity = null;
						previousValue.buy_details.Remove(this);
					}
					this._Showtime.Entity = value;
					if ((value != null))
					{
						value.buy_details.Add(this);
						this._show_id = value.show_id;
					}
					else
					{
						this._show_id = default(string);
					}
					this.SendPropertyChanged("Showtime");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cus_id;
		
		private string _cus_name;
		
		private string _password;
		
		private string _address;
		
		private string _phone;
		
		private EntitySet<Buy> _Buys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncus_idChanging(int value);
    partial void Oncus_idChanged();
    partial void Oncus_nameChanging(string value);
    partial void Oncus_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public Customer()
		{
			this._Buys = new EntitySet<Buy>(new Action<Buy>(this.attach_Buys), new Action<Buy>(this.detach_Buys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cus_id
		{
			get
			{
				return this._cus_id;
			}
			set
			{
				if ((this._cus_id != value))
				{
					this.Oncus_idChanging(value);
					this.SendPropertyChanging();
					this._cus_id = value;
					this.SendPropertyChanged("cus_id");
					this.Oncus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_name", DbType="NVarChar(50)")]
		public string cus_name
		{
			get
			{
				return this._cus_name;
			}
			set
			{
				if ((this._cus_name != value))
				{
					this.Oncus_nameChanging(value);
					this.SendPropertyChanging();
					this._cus_name = value;
					this.SendPropertyChanged("cus_name");
					this.Oncus_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Buy", Storage="_Buys", ThisKey="cus_id", OtherKey="cus_id")]
		public EntitySet<Buy> Buys
		{
			get
			{
				return this._Buys;
			}
			set
			{
				this._Buys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buys(Buy entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Buys(Buy entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movie")]
	public partial class Movie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _movie_id;
		
		private string _movie_name;
		
		private string _director;
		
		private string _poster;
		
		private System.Nullable<System.DateTime> _release_date;
		
		private EntitySet<Showtime> _Showtimes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmovie_idChanging(int value);
    partial void Onmovie_idChanged();
    partial void Onmovie_nameChanging(string value);
    partial void Onmovie_nameChanged();
    partial void OndirectorChanging(string value);
    partial void OndirectorChanged();
    partial void OnposterChanging(string value);
    partial void OnposterChanged();
    partial void Onrelease_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onrelease_dateChanged();
    #endregion
		
		public Movie()
		{
			this._Showtimes = new EntitySet<Showtime>(new Action<Showtime>(this.attach_Showtimes), new Action<Showtime>(this.detach_Showtimes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int movie_id
		{
			get
			{
				return this._movie_id;
			}
			set
			{
				if ((this._movie_id != value))
				{
					this.Onmovie_idChanging(value);
					this.SendPropertyChanging();
					this._movie_id = value;
					this.SendPropertyChanged("movie_id");
					this.Onmovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_name", DbType="NVarChar(30)")]
		public string movie_name
		{
			get
			{
				return this._movie_name;
			}
			set
			{
				if ((this._movie_name != value))
				{
					this.Onmovie_nameChanging(value);
					this.SendPropertyChanging();
					this._movie_name = value;
					this.SendPropertyChanged("movie_name");
					this.Onmovie_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_director", DbType="NVarChar(30)")]
		public string director
		{
			get
			{
				return this._director;
			}
			set
			{
				if ((this._director != value))
				{
					this.OndirectorChanging(value);
					this.SendPropertyChanging();
					this._director = value;
					this.SendPropertyChanged("director");
					this.OndirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_poster", DbType="VarChar(50)")]
		public string poster
		{
			get
			{
				return this._poster;
			}
			set
			{
				if ((this._poster != value))
				{
					this.OnposterChanging(value);
					this.SendPropertyChanging();
					this._poster = value;
					this.SendPropertyChanged("poster");
					this.OnposterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_release_date", DbType="Date")]
		public System.Nullable<System.DateTime> release_date
		{
			get
			{
				return this._release_date;
			}
			set
			{
				if ((this._release_date != value))
				{
					this.Onrelease_dateChanging(value);
					this.SendPropertyChanging();
					this._release_date = value;
					this.SendPropertyChanged("release_date");
					this.Onrelease_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movie_Showtime", Storage="_Showtimes", ThisKey="movie_id", OtherKey="movie_id")]
		public EntitySet<Showtime> Showtimes
		{
			get
			{
				return this._Showtimes;
			}
			set
			{
				this._Showtimes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Showtimes(Showtime entity)
		{
			this.SendPropertyChanging();
			entity.Movie = this;
		}
		
		private void detach_Showtimes(Showtime entity)
		{
			this.SendPropertyChanging();
			entity.Movie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Showtime")]
	public partial class Showtime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _show_id;
		
		private System.Nullable<int> _movie_id;
		
		private System.Nullable<System.DateTime> _show_date;
		
		private string _show_time;
		
		private System.Nullable<decimal> _show_price;
		
		private System.Nullable<int> _show_quantity;
		
		private EntitySet<buy_detail> _buy_details;
		
		private EntityRef<Movie> _Movie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onshow_idChanging(string value);
    partial void Onshow_idChanged();
    partial void Onmovie_idChanging(System.Nullable<int> value);
    partial void Onmovie_idChanged();
    partial void Onshow_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onshow_dateChanged();
    partial void Onshow_timeChanging(string value);
    partial void Onshow_timeChanged();
    partial void Onshow_priceChanging(System.Nullable<decimal> value);
    partial void Onshow_priceChanged();
    partial void Onshow_quantityChanging(System.Nullable<int> value);
    partial void Onshow_quantityChanged();
    #endregion
		
		public Showtime()
		{
			this._buy_details = new EntitySet<buy_detail>(new Action<buy_detail>(this.attach_buy_details), new Action<buy_detail>(this.detach_buy_details));
			this._Movie = default(EntityRef<Movie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_id", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string show_id
		{
			get
			{
				return this._show_id;
			}
			set
			{
				if ((this._show_id != value))
				{
					this.Onshow_idChanging(value);
					this.SendPropertyChanging();
					this._show_id = value;
					this.SendPropertyChanged("show_id");
					this.Onshow_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movie_id", DbType="Int")]
		public System.Nullable<int> movie_id
		{
			get
			{
				return this._movie_id;
			}
			set
			{
				if ((this._movie_id != value))
				{
					if (this._Movie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmovie_idChanging(value);
					this.SendPropertyChanging();
					this._movie_id = value;
					this.SendPropertyChanged("movie_id");
					this.Onmovie_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_date", DbType="Date")]
		public System.Nullable<System.DateTime> show_date
		{
			get
			{
				return this._show_date;
			}
			set
			{
				if ((this._show_date != value))
				{
					this.Onshow_dateChanging(value);
					this.SendPropertyChanging();
					this._show_date = value;
					this.SendPropertyChanged("show_date");
					this.Onshow_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_time", DbType="VarChar(5)")]
		public string show_time
		{
			get
			{
				return this._show_time;
			}
			set
			{
				if ((this._show_time != value))
				{
					this.Onshow_timeChanging(value);
					this.SendPropertyChanging();
					this._show_time = value;
					this.SendPropertyChanged("show_time");
					this.Onshow_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> show_price
		{
			get
			{
				return this._show_price;
			}
			set
			{
				if ((this._show_price != value))
				{
					this.Onshow_priceChanging(value);
					this.SendPropertyChanging();
					this._show_price = value;
					this.SendPropertyChanged("show_price");
					this.Onshow_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_quantity", DbType="Int")]
		public System.Nullable<int> show_quantity
		{
			get
			{
				return this._show_quantity;
			}
			set
			{
				if ((this._show_quantity != value))
				{
					this.Onshow_quantityChanging(value);
					this.SendPropertyChanging();
					this._show_quantity = value;
					this.SendPropertyChanged("show_quantity");
					this.Onshow_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Showtime_buy_detail", Storage="_buy_details", ThisKey="show_id", OtherKey="show_id")]
		public EntitySet<buy_detail> buy_details
		{
			get
			{
				return this._buy_details;
			}
			set
			{
				this._buy_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movie_Showtime", Storage="_Movie", ThisKey="movie_id", OtherKey="movie_id", IsForeignKey=true)]
		public Movie Movie
		{
			get
			{
				return this._Movie.Entity;
			}
			set
			{
				Movie previousValue = this._Movie.Entity;
				if (((previousValue != value) 
							|| (this._Movie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movie.Entity = null;
						previousValue.Showtimes.Remove(this);
					}
					this._Movie.Entity = value;
					if ((value != null))
					{
						value.Showtimes.Add(this);
						this._movie_id = value.movie_id;
					}
					else
					{
						this._movie_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Movie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_buy_details(buy_detail entity)
		{
			this.SendPropertyChanging();
			entity.Showtime = this;
		}
		
		private void detach_buy_details(buy_detail entity)
		{
			this.SendPropertyChanging();
			entity.Showtime = null;
		}
	}
}
#pragma warning restore 1591
